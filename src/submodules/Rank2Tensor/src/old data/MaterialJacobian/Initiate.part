!
!------------------------------------------------------------------------------
!                   Author      :   Vikas sharma
!                   Position    :   Doctral Student
!                   Institute   :   Kyoto Univeristy, Japan
!                   Program name:   Initiate.part
!                   Last Update :   Dec-29-2017
!
!------------------------------------------------------------------------------
!                       Details of Program
!==============================================================================
!
!   TYPE :: Part of the program
!
!   DESCRIPTION
!       -   MaterialJacobian class is defined
!   HOSTING FILE
!       -   MaterialJacobian_Class.F90
!
!==============================================================================

!------------------------------------------------------------------------------
!                                                                     getSize
!------------------------------------------------------------------------------

 INTEGER( I4B ) FUNCTION getSize( obj )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Returns the size of obj%C
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj

    IF( .NOT. ALLOCATED( obj%C ) ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.F90>>Initiate.part", &
        "getSize(), .Size. obj", &
        "obj%C is not allocated, Program Stopped!!!"&
        )

        STOP

    END IF

    getSize = SIZE( obj%C, 1 )

 END FUNCTION getSize

!------------------------------------------------------------------------------
!                                                                    Deallocate
!------------------------------------------------------------------------------

 SUBROUTINE Deallocate( obj )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Deallocate Data
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )

 END SUBROUTINE Deallocate

!------------------------------------------------------------------------------
!                                                                    Initiate1
!------------------------------------------------------------------------------

 SUBROUTINE Initiate1( obj, N )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Allocate the obj%C( N, N )
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    INTEGER( I4B ), INTENT( IN ) :: N

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )
    ALLOCATE( obj%C( N, N ) )
    obj%C = 0.0_DFP

 END SUBROUTINE Initiate1

!------------------------------------------------------------------------------
!                                                                    Initiate2
!------------------------------------------------------------------------------

 SUBROUTINE Initiate2( obj, N, Fill )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Allocate the obj%C( N, N ) with all entries fill
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    INTEGER( I4B ), INTENT( IN ) :: N
    REAL( DFP ), INTENT( IN ) :: Fill

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )
    ALLOCATE( obj%C( N, N ) )
    obj%C = Fill

 END SUBROUTINE Initiate2

!------------------------------------------------------------------------------
!                                                                    Initiate3
!------------------------------------------------------------------------------

 SUBROUTINE Initiate3( obj, Mat )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Allocate the obj%C( :, : ) = Mat
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    REAL( DFP ), INTENT( IN ) :: Mat( :, : )

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )
    obj%C = Mat

 END SUBROUTINE Initiate3

!------------------------------------------------------------------------------
!                                                                   Initiate4
!------------------------------------------------------------------------------

 SUBROUTINE Initiate4( obj, N, StressType, StrainType, RateType )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Size of obj%C is N, with other details
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    INTEGER( I4B ), INTENT( IN ) :: N
    TYPE( String_ ), INTENT( IN ) :: StressType, StrainType, RateType

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )
    ALLOCATE( obj%C( N, N ) )
    obj%C = 0.0_DFP

    obj%StressType = StressType
    obj%StrainType = StrainType
    obj%RateType = RateType

 END SUBROUTINE Initiate4

!------------------------------------------------------------------------------
!                                                                   Initiate5
!------------------------------------------------------------------------------

 SUBROUTINE Initiate5( obj, N, StressType, StrainType, RateType )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Size of obj%C is N, with other details
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    INTEGER( I4B ), INTENT( IN ) :: N
    CHARACTER( LEN = * ), INTENT( IN ) :: StressType, StrainType, RateType

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )
    ALLOCATE( obj%C( N, N ) )
    obj%C = 0.0_DFP

    obj%StressType = StressType
    obj%StrainType = StrainType
    obj%RateType = RateType

 END SUBROUTINE Initiate5

!------------------------------------------------------------------------------
!                                                                   Initiate6
!------------------------------------------------------------------------------

 SUBROUTINE Initiate6( obj, N, Names )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Size of obj%C is N, with other details
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    INTEGER( I4B ), INTENT( IN ) :: N
    TYPE( String_ ), INTENT( IN ) :: Names( 3 )

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )
    ALLOCATE( obj%C( N, N ) )
    obj%C = 0.0_DFP

    obj%StressType = Names( 1 )
    obj%StrainType = Names( 2 )
    obj%RateType = Names( 3 )

 END SUBROUTINE Initiate6

!------------------------------------------------------------------------------
!                                                                   Initiate7
!------------------------------------------------------------------------------

 SUBROUTINE Initiate7( obj, N, Names )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Allocate the obj%C( N, N ) with all entries fill
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    INTEGER( I4B ), INTENT( IN ) :: N
    CHARACTER( LEN = * ), INTENT( IN ) :: Names( 3 )

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )
    ALLOCATE( obj%C( N, N ) )
    obj%C = 0.0_DFP

    obj%StressType = Names( 1 )
    obj%StrainType = Names( 2 )
    obj%RateType = Names( 3 )

 END SUBROUTINE Initiate7

!------------------------------------------------------------------------------
!                                                                   Initiate8
!------------------------------------------------------------------------------

 SUBROUTINE Initiate8( obj, obj2 )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Copy obj2 into obj
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( INOUT ) :: obj
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj2

    IF( ALLOCATED( obj%C ) ) DEALLOCATE( obj%C )

    IF( ALLOCATED( obj2%C ) ) THEN

        obj%C = obj2%C

    END IF

    obj%StressType = obj2%StressType
    obj%StrainType = obj2%StrainType
    obj%RateType = obj2%RateType

 END SUBROUTINE Initiate8



