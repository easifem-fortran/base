!
!------------------------------------------------------------------------------
!                   Author      :   Vikas sharma
!                   Position    :   Doctral Student
!                   Institute   :   Kyoto Univeristy, Japan
!                   Program name:   Addition.part
!                   Last Update :   Dec-30-2017
!
!------------------------------------------------------------------------------
!                       Details of Program
!==============================================================================
!
!   TYPE :: Part of the program
!
!   DESCRIPTION
!       -   Addition Operator is defined
!   HOSTING FILE
!       -   MaterialJacobian_Class.f90
!==============================================================================

!------------------------------------------------------------------------------
!                                                       obj_Add_obj
!------------------------------------------------------------------------------

 FUNCTION obj_Add_obj( obj, obj2 )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  obj + obj2
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj2
    REAL( DFP ), ALLOCATABLE :: obj_Add_obj( :, : )

    ! Define internal variables
    INTEGER( I4B ) :: N1, N2

    IF( .NOT. ALLOCATED( obj%C ) &
        .OR. .NOT. ALLOCATED( obj2%C ) ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "obj + obj2", &
        "obj or obj2 is/are not initiated, Program Stopped!!!"&
        )
        STOP

    END IF

    N1 = .SIZE. obj
    N2 = .SIZE. obj2

    IF( N1 .NE. N2 ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "obj + obj2", &
        "The Shape of obj%C and obj2%C are not Compatible, &
        Program Stopped!!!"&
        )
        STOP

    END IF

    ALLOCATE( obj_Add_obj( N1, N1 ) )

    obj_Add_obj = obj%C + obj2%C

 END FUNCTION obj_Add_obj

!------------------------------------------------------------------------------
!                                                                  obj_Add_Mat
!------------------------------------------------------------------------------

 FUNCTION obj_Add_Mat( obj, Mat )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  obj + Mat
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj
    REAL( DFP ), INTENT( IN ) :: Mat( :, : )
    REAL( DFP ), ALLOCATABLE :: obj_Add_Mat( :, : )

    ! Define internal variables
    INTEGER( I4B ) :: N1, N2

    IF( .NOT. ALLOCATED( obj%C ) ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "obj + Mat", &
        "obj is not initiated, Program Stopped!!!"&
        )
        STOP

    END IF

    N1 = .SIZE. obj
    N2 = SIZE( Mat, 1 )

    IF( N1 .NE. N2 ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "obj + Mat", &
        "The Shape of obj%C and Mat are not Compatible, &
        Program Stopped!!!"&
        )
        STOP

    END IF

    ALLOCATE( obj_Add_Mat( N1, N1 ) )

    obj_Add_Mat = obj%C + Mat

 END FUNCTION obj_Add_Mat

!------------------------------------------------------------------------------
!                                                                  Mat_Add_obj
!------------------------------------------------------------------------------

 FUNCTION Mat_Add_obj( Mat, obj )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  Mat + obj
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj
    REAL( DFP ), INTENT( IN ) :: Mat( :, : )
    REAL( DFP ), ALLOCATABLE :: Mat_Add_obj( :, : )

    Mat_Add_obj = obj_Add_Mat( obj, Mat )

 END FUNCTION Mat_Add_obj

!------------------------------------------------------------------------------
!                                                               obj_Add_Scalar
!------------------------------------------------------------------------------

 FUNCTION obj_Add_Scalar( obj, Scalar )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  obj + Scalar
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj
    REAL( DFP ), INTENT( IN ) :: Scalar
    REAL( DFP ), ALLOCATABLE :: obj_Add_Scalar( :, : )

    ! Define internal variables
    INTEGER( I4B ) :: N

    IF( .NOT. ALLOCATED( obj%C ) ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "obj + Mat", &
        "obj is not initiated, Program Stopped!!!"&
        )
        STOP

    END IF

    N = .SIZE. obj
    ALLOCATE( obj_Add_Scalar( N, N ) )
    obj_Add_Scalar = obj%C + Scalar

 END FUNCTION obj_Add_Scalar

!------------------------------------------------------------------------------
!                                                               Scalar_Add_obj
!------------------------------------------------------------------------------

 FUNCTION Scalar_Add_obj( Scalar, obj )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  Scalar + obj
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: obj
    REAL( DFP ), INTENT( IN ) :: Scalar
    REAL( DFP ), ALLOCATABLE :: Scalar_Add_obj( :, : )

    Scalar_Add_obj = obj_Add_Scalar( obj, Scalar )

 END FUNCTION Scalar_Add_obj