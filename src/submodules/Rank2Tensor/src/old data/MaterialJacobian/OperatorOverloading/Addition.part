!
!------------------------------------------------------------------------------
!                   Author      :   Vikas sharma
!                   Position    :   Doctral Student
!                   Institute   :   Kyoto Univeristy, Japan
!                   Program name:   Addition.part
!                   Last Update :   Dec-30-2017
!
!------------------------------------------------------------------------------
!                       Details of Program
!==============================================================================
!
!   TYPE :: Part of the program
!
!   DESCRIPTION
!       -   Addition Operator is defined
!   HOSTING FILE
!       -   MaterialJacobian_Class.f90
!==============================================================================

!------------------------------------------------------------------------------
!                                                       Obj_Add_Obj
!------------------------------------------------------------------------------

 FUNCTION Obj_Add_Obj( Obj, Obj2 )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  Obj + Obj2
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: Obj
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: Obj2
    REAL( DFP ), ALLOCATABLE :: Obj_Add_Obj( :, : )

    ! Define internal variables
    INTEGER( I4B ) :: N1, N2

    IF( .NOT. ALLOCATED( Obj%C ) &
        .OR. .NOT. ALLOCATED( Obj2%C ) ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "Obj + Obj2", &
        "Obj or Obj2 is/are not initiated, Program Stopped!!!"&
        )
        STOP

    END IF

    N1 = .SIZE. Obj
    N2 = .SIZE. Obj2

    IF( N1 .NE. N2 ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "Obj + Obj2", &
        "The Shape of Obj%C and Obj2%C are not Compatible, &
        Program Stopped!!!"&
        )
        STOP

    END IF

    ALLOCATE( Obj_Add_Obj( N1, N1 ) )

    Obj_Add_Obj = Obj%C + Obj2%C

 END FUNCTION Obj_Add_Obj

!------------------------------------------------------------------------------
!                                                                  Obj_Add_Mat
!------------------------------------------------------------------------------

 FUNCTION Obj_Add_Mat( Obj, Mat )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  Obj + Mat
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: Obj
    REAL( DFP ), INTENT( IN ) :: Mat( :, : )
    REAL( DFP ), ALLOCATABLE :: Obj_Add_Mat( :, : )

    ! Define internal variables
    INTEGER( I4B ) :: N1, N2

    IF( .NOT. ALLOCATED( Obj%C ) ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "Obj + Mat", &
        "Obj is not initiated, Program Stopped!!!"&
        )
        STOP

    END IF

    N1 = .SIZE. Obj
    N2 = SIZE( Mat, 1 )

    IF( N1 .NE. N2 ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "Obj + Mat", &
        "The Shape of Obj%C and Mat are not Compatible, &
        Program Stopped!!!"&
        )
        STOP

    END IF

    ALLOCATE( Obj_Add_Mat( N1, N1 ) )

    Obj_Add_Mat = Obj%C + Mat

 END FUNCTION Obj_Add_Mat

!------------------------------------------------------------------------------
!                                                                  Mat_Add_Obj
!------------------------------------------------------------------------------

 FUNCTION Mat_Add_Obj( Mat, Obj )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  Mat + Obj
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: Obj
    REAL( DFP ), INTENT( IN ) :: Mat( :, : )
    REAL( DFP ), ALLOCATABLE :: Mat_Add_Obj( :, : )

    Mat_Add_Obj = Obj_Add_Mat( Obj, Mat )

 END FUNCTION Mat_Add_Obj

!------------------------------------------------------------------------------
!                                                               Obj_Add_Scalar
!------------------------------------------------------------------------------

 FUNCTION Obj_Add_Scalar( Obj, Scalar )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  Obj + Scalar
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: Obj
    REAL( DFP ), INTENT( IN ) :: Scalar
    REAL( DFP ), ALLOCATABLE :: Obj_Add_Scalar( :, : )

    ! Define internal variables
    INTEGER( I4B ) :: N

    IF( .NOT. ALLOCATED( Obj%C ) ) THEN

        CALL Err_Msg( &
        "MaterialJacobian_Class.f90>>Addition.part", &
        "Obj + Mat", &
        "Obj is not initiated, Program Stopped!!!"&
        )
        STOP

    END IF

    N = .SIZE. Obj
    ALLOCATE( Obj_Add_Scalar( N, N ) )
    Obj_Add_Scalar = Obj%C + Scalar

 END FUNCTION Obj_Add_Scalar

!------------------------------------------------------------------------------
!                                                               Scalar_Add_Obj
!------------------------------------------------------------------------------

 FUNCTION Scalar_Add_Obj( Scalar, Obj )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!   1.  Scalar + Obj
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: Obj
    REAL( DFP ), INTENT( IN ) :: Scalar
    REAL( DFP ), ALLOCATABLE :: Scalar_Add_Obj( :, : )

    Scalar_Add_Obj = Obj_Add_Scalar( Obj, Scalar )

 END FUNCTION Scalar_Add_Obj