!
!------------------------------------------------------------------------------
!                   Author      :   Vikas sharma
!                   Position    :   Doctral Student
!                   Institute   :   Kyoto Univeristy, Japan
!                   Program name:   Display.part
!                   Last Update :   Dec-29-2017
!
!------------------------------------------------------------------------------
!                       Details of Program
!==============================================================================
!
!   TYPE :: Part of the program
!
!   DESCRIPTION
!       -   Material Jacobian class is defined
!   HOSTING FILE
!       -   MaterialJacobian_Class.f90
!
!==============================================================================

!------------------------------------------------------------------------------
!                                                                      Display
!------------------------------------------------------------------------------

 SUBROUTINE Display( Obj, UnitNo )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  Display the content
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    ! Define intent of dummy variables
    CLASS( MaterialJacobian_ ), INTENT( IN ) :: Obj
    INTEGER( I4B ), INTENT( IN ), OPTIONAL :: UnitNo

    !   Define internal variables
    INTEGER( I4B ) :: I, j

    IF( PRESENT( UnitNo ) ) THEN
        I = UnitNo
    ELSE
        I = 6
    END IF

    IF( .NOT. ALLOCATED( Obj % C ) ) THEN

        CALL BlankLines( UnitNo = I )
        WRITE( I, "(A)" ) "MaterialJacobian_ Object is Empty"
        CALL BlankLines( UnitNo = I )
        RETURN

    END IF

    CALL BlankLines( UnitNo = I )
    CALL EqualLine( UnitNo = I )
    WRITE( I, "(12X, A)" ) "|||| Material Jacobian Data ||||"
    CALL EqualLine( UnitNo = I )
    CALL BlankLines( UnitNo = I )

    CALL Display_Array( Obj % C, "C" )

    WRITE( I, "(A)" ) "Stress Type"
    CALL Obj % StressType % Display( I )

    WRITE( I, "(A)" ) "Strain Type"
    CALL Obj % StrainType % Display( I )

    WRITE( I, "(A)" ) "Rate Type"
    CALL Obj % RateType % Display( )

 END SUBROUTINE Display
