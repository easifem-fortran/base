!
!------------------------------------------------------------------------------
!                   Author      :   Vikas sharma
!                   Position    :   Doctral Student
!                   Institute   :   Kyoto Univeristy, Japan
!                   Program name:   EshelbyStress.part
!                   Last Update :   Dec-28-2017
!
!------------------------------------------------------------------------------
!                       Details of Program
!==============================================================================
!
!   Type:: Part of Module
!
!   Description ::
!       -   This part includes subroutine for getting Eshelby Stress from
!           any other Stress Measures
!   Hosting File ::
!       -   Stress_Class
!==============================================================================

!------------------------------------------------------------------------------
!                                                              getEshelbyStress
!------------------------------------------------------------------------------

 FUNCTION getEshelbyStress( obj, F )

!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
!       1.  This subroutine computes the Cauchy stress from given stress type
!       2.  Fobj is Deformation Gradient object.
!.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

    USE Rank2Tensor_Class
    USE DeformationGradient_Class

    !  Define arguments of dummy argument
    CLASS( Stress_ ), INTENT( IN ) :: obj
    TYPE( DeformationGradient_ ), INTENT( IN ) :: F
    REAL( DFP ), ALLOCATABLE :: getEshelbyStress( :, : )

    ! Define internal variables
    TYPE( Rank2Tensor_ ) :: T
    REAL( DFP ), ALLOCATABLE :: InvF( :, : )
    REAL( DFP ) :: J

    IF( .NOT. ALLOCATED( obj%V ) ) THEN

        CALL Err_Msg( &
            "Stress_Class.F90>>EshelbyStress.part", &
            "getEshelbyStress()", &
            "Stress_ object is not initiated. &
            Program Stopped !!!" &
        )
        STOP

    END IF

    T = obj

    SELECT CASE( TRIM( obj%StressType ) )

        CASE( "Cauchy", "cauchy", "Sigma", "sigma" )

            J = .det. F
            InvF = .Inv. F
            getEshelbyStress = (.transpose. F ) .matmul. ( T .matmul. TRANSPOSE( InvF ) )
            getEshelbyStress = J * getEshelbyStress

        CASE( "Kirchhoff", "kirchhoff", "Tau", "kirchoff", "Kirchoff", "tau" )

            InvF = .Inv. F
            getEshelbyStress = (.transpose. F ) .matmul. ( T .matmul. TRANSPOSE( InvF ) )

        CASE( "PK2", "Pk2", "pk2", "PK-2", "pk-2", "S", "s" )

            getEshelbyStress = ( (.transpose. F ) .matmul. F ) .matmul.  T

        CASE( "PK1", "Pk1", "pk1", "PK-1", "pk-1", "Pi", "PI", "pi" )

            getEshelbyStress = ( .transpose. F ) .matmul. T

        CASE( "Eshelby-Like", "Eshelby", "EshelbyLike", "M", "m" )

            getEshelbyStress = T

        CASE DEFAULT

            CALL Err_Msg( &
                "Stress_Class.F90>>EshelbyStress.part", &
                "getEshelbyStress( obj, F )", &
                "No case found for obj%StressType. &
                Program Stopped!!!" &
            )
            STOP

    END SELECT

    CALL T%Deallocate( )
    IF( ALLOCATED( InvF ) ) DEALLOCATE( InvF )

 END FUNCTION getEshelbyStress

!------------------------------------------------------------------------------
!
!------------------------------------------------------------------------------

