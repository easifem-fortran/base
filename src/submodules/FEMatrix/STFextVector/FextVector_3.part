!
!------------------------------------------------------------------------------
!                   Author      :   Vikas sharma
!                   Position    :   Doctral Student
!                   Institute   :   Kyoto Univeristy, Japan
!                   Program name:   FextVector_3.part
!                   Last Update :   Nov-23-2017
!
!------------------------------------------------------------------------------
!                           Details of Program
!==============================================================================
!
!   TYPE    ::  Part of the Code
!
!   DESCRIPTION
!       -   This code is part of the code
!       -   Space Interpolation of scalar and vector
!
!   HOSTING FILE
!       -    STFextVector_Class.f90
!
!==============================================================================
!
!
!------------------------------------------------------------------------------
!                                                              getFextVector_3
!------------------------------------------------------------------------------
!
SUBROUTINE getFextVector_3( Obj, Fext )
  
  !.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
  !    1. Fext is constant in both space and time domain
  !.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
  
  USE Utility, ONLY : OUTERPROD
  
  ! Define intent of dummy variables
#ifdef STMat
  CLASS( SpaceTimeMatrix_ ), INTENT( INOUT ), TARGET ::  Obj
#else
  CLASS( STFextVector_ ), INTENT( INOUT ), TARGET ::  Obj
#endif

  REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: Fext

  ! Define internal variables
  INTEGER( I4B ) :: NNS, NNT, NIPS, NIPT, IPS, IPT, a, M
  REAL( DFP ), ALLOCATABLE ::  DummyMat(:,:)
  REAL( DFP ) :: RealVal
  CLASS( STShapeData_ ), POINTER :: SD

#ifdef DEBUG_VER
  Error_Flag = .FALSE.
  IF( .NOT. Obj % isInitiated( ) ) THEN
     CALL Err_Msg( &
          & "STFextVector_Class.f90", &
          & "getFextVector_1(Obj, Fext)", &
          & "STFextVector_ Object is not Initiated" )
     Error_Flag = .TRUE.
     RETURN
  END IF
#endif

  NNS = Obj % SD( 1,1 ) % getNNS( )
  NNT = Obj % SD( 1,1 ) % getNNT( ) 

  M = SIZE( Fext, 1 )
  IF( ALLOCATED( Obj % Vec3 ) ) DEALLOCATE( Obj % Vec3 )
  ALLOCATE( Obj % Vec3( M, NNS, NNT ) )
  Obj % Vec3 = 0.0_DFP

  NIPS = Obj % getNIPS( )
  NIPT = Obj % getNIPT( )

  DO IPT = 1, NIPT
     DO IPS = 1, NIPS
        SD => Obj % SD( IPS, IPT )
        RealVal = SD % Ws * SD % Wt * SD % Js_Xi2Xt &
             & * SD % Jt * SD % Thickness
        DummyMat = OUTERPROD( Fext, SD % N )
        
        DO a = 1, NNT
           Obj % Vec3( :, :, a ) = Obj % Vec3( :, :, a ) + &
                & DummyMat * RealVal * SD % T( a )
        END DO
     END DO
  END DO

  DEALLOCATE( DummyMat )
  NULLIFY( SD )

END SUBROUTINE getFextVector_3

!------------------------------------------------------------------------------
!
!------------------------------------------------------------------------------

