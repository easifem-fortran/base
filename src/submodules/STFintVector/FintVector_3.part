!
!------------------------------------------------------------------------------
!                   Author      :   Vikas sharma
!                   Position    :   Doctral Student
!                   Institute   :   Kyoto Univeristy, Japan
!                   Program name:   FintVector_3.part
!                   Last Update :   Jan-04-2018
!
!------------------------------------------------------------------------------
!                           Details of Program
!==============================================================================
!
!   TYPE    ::  Part of the Code
!
!   DESCRIPTION
!       -   This code is part of the code
!       -   Method for computing the Spacetime Fint vector
!
!   HOSTING FILE
!       -    STFintVector_Class.f90
!
!==============================================================================

!------------------------------------------------------------------------------
!                                                              getFintVector_3
!------------------------------------------------------------------------------

SUBROUTINE getFintVector_3( Obj, Sigma )

  !.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
  !       1.  Returns element Fint;
  !       2.  Sigma( : ) does not change with space and time.
  !       3.  First index of Sigma is related to the voigt components
  !.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .

  USE Voigt, ONLY : MatFromVoigtVec

  ! Define intent of dummy variables
#ifdef STMat
  CLASS( SpaceTimeMatrix_ ), INTENT( INOUT ), TARGET ::  Obj
#else
  CLASS( STFintVector_ ), INTENT( INOUT ), TARGET ::  Obj
#endif

  REAL( DFP ), DIMENSION( : ), INTENT( IN ) :: Sigma

  ! Define internal variables
  INTEGER( I4B ) :: NNS, NNT, NIPS, NIPT, IPS, IPT, I, NSD, J
  REAL( DFP ), ALLOCATABLE :: S( :, : ), Mat( :, : )
  REAL( DFP ) :: RealVal
  CLASS( STShapeData_ ), POINTER :: SD

#ifdef DEBUG_VER
  Error_Flag = .FALSE.
  IF( .NOT. Obj % isInitiated( ) ) THEN
     CALL Err_Msg( &
          "STFintVector_Class.f90", &
          "getFintVector_3(Obj, Sigma)", &
          "STFintVector_ Object is not Initiated" )
     Error_Flag = .TRUE.
     RETURN
  END IF
#endif

  NNS = Obj % SD( 1,1 ) % getNNS( )
  NNT = Obj % SD( 1,1 ) % getNNT( ) 
  NSD = Obj % SD( 1,1 ) % getNSD( )
  NIPS = Obj % getNIPS( )
  NIPT = Obj % getNIPT( )

  IF( ALLOCATED( Obj % Vec3 ) ) DEALLOCATE( Obj % Vec3 )
  ALLOCATE( Obj % Vec3( NSD, NNS, NNT ) )
  Obj % Vec3 = 0.0_DFP

  ! Make Stress Tensor ( 3 by 3 )
  S = MatFromVoigtVec( Sigma, "Stress" )

  DO IPT = 1, NIPT
     DO IPS = 1, NIPS
        SD => Obj % SD( IPS, IPT )
        RealVal = SD % Ws * SD % Wt * SD % Js_Xi2Xt * SD % Jt * SD%Thickness
        DO i = 1, NSD 
           Mat = S( i, 1 ) * SD % dNTdXt( :, 1, : )
           DO j = 2, NSD
              Mat = Mat + S( i, j ) * SD % dNTdXt( :, j, : )
           END DO
           Obj % Vec3( i, :, : ) = Obj % Vec3( i, :, : ) + RealVal * Mat
        END DO
     END DO
  END DO

  DEALLOCATE( S, Mat )
  NULLIFY( SD )

END SUBROUTINE getFintVector_3

!------------------------------------------------------------------------------
!
!------------------------------------------------------------------------------

