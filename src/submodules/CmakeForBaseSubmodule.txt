#
# Automagically generated by Approximatrix Simply Fortran 3.15
#

cmake_minimum_required(VERSION 3.13.0 FATAL_ERROR)
project(easifemBaseModules LANGUAGES Fortran VERSION 1.0.0)

## identifying the operating system
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
  message(STATUS "Windows system found")
else()
  message(STATUS "MacOS system found")
  set(EASIFEM_DEFAULT_PREFIX "${CMAKE_BINARY_DIR}/../../../")
  set(EASIFEM_PREFIX "${EASIFEM_DEFAULT_PREFIX}" CACHE STRING "location where easifem will be installed")
  message("EASIFEM_PREFIX = ${EASIFEM_PREFIX}")

  if( EXISTS "${EASIFEM_PREFIX}/easifem")
    message("${EASIFEM_PREFIX}/easifem already exists, using it only")
  else()
    message("${EASIFEM_PREFIX}/easifem has been created")
    file( MAKE_DIRECTORY "${EASIFEM_PREFIX}/easifem" )
  endif()

  set(EASIFEM_BASE_ARCH "${EASIFEM_PREFIX}/easifem/easifem-base" CACHE PATH "Location of easifem-base")

  if( EXISTS "${EASIFEM_BASE_ARCH}")
    message("${EASIFEM_BASE_ARCH} already exists, using it.")
  else()
    message("${EASIFEM_BASE_ARCH} has been created")
    file( MAKE_DIRECTORY "${EASIFEM_BASE_ARCH}" )
  endif()

  set(EASIFEM_BASE_INCLUDE "${EASIFEM_BASE_ARCH}/include" CACHE PATH "Location where modules of easifemBase")

  if( EXISTS "${EASIFEM_BASE_INCLUDE}")
    message("${EASIFEM_BASE_INCLUDE} already exists, using it.")
  else()
    message("${EASIFEM_BASE_INCLUDE} has been created")
    file( MAKE_DIRECTORY "${EASIFEM_BASE_INCLUDE}" )
  endif()

  set(EASIFEM_BASE_LIB "${EASIFEM_BASE_ARCH}/lib" CACHE PATH "Location where modules of easifemBase")

  if( EXISTS "${EASIFEM_BASE_LIB}")
    message("${EASIFEM_BASE_LIB} already exists, using it.")
  else()
    message("${EASIFEM_BASE_LIB} has been created")
    file( MAKE_DIRECTORY "${EASIFEM_BASE_LIB}" )
  endif()
endif()

set(SOURCES BaseType@AdditionalMethods.f90 BoundingBox/BoundingBox_Method@Constructor.f90 Buffer/Buffer_Method@Methods.f90 DOF/DOF_Method@Constructor.f90 DOF/DOF_Method@GetMethod.f90 DOF/DOF_Method@setMethod.f90 Vector/Tensor/Rank2Tensor/dsyevc3.f Vector/Tensor/Rank2Tensor/dsyevh3.f Vector/Tensor/Rank2Tensor/dsyevq3.f Vector/Tensor/Rank2Tensor/dsytrd3.f ElemshapeData/ElemshapeData_Method@Constructor.f90 ElemshapeData/ElemshapeData_Method@getMethod.f90 ElemshapeData/ElemshapeData_Method@H1Lagrange.f90 ElemshapeData/ElemshapeData_Method@HexahedronH1Lagrange.f90 ElemshapeData/ElemshapeData_Method@LineH1Lagrange.f90 ElemshapeData/ElemshapeData_Method@PrismH1Lagrange.f90 ElemshapeData/ElemshapeData_Method@PyramidH1Lagrange.f90 ElemshapeData/ElemshapeData_Method@QuadrangleH1Lagrange.f90 ElemshapeData/ElemshapeData_Method@setMethod.f90 ElemshapeData/ElemshapeData_Method@TetrahedronH1Lagrange.f90 ElemshapeData/ElemshapeData_Method@TriangleH1Lagrange.f90 FEMatrix/FEMatrix_Module@DiffusionMatrix.f90 FEMatrix/FEMatrix_Module@MassMatrix.f90 FEMatrix/FEMatrix_Module@NitscheMatrix.f90 FEMatrix/FEMatrix_Module@StiffnessMatrix.f90 FEVariable/FEVariable_Method@Constructor.f90 FEVariable/FEVariable_Method@GetMethod.f90 File/File_Method@Constructor.f90 File/File_Method@Inquire.f90 File/File_Method@ReadMethods.f90 File/File_Method@WriteMethods.f90 Lapack/GE_Lapack_Method@Eigenvalue.f90 Lapack/GE_Lapack_Method@LinearSolve.f90 Lapack/GE_Lapack_Method@LU.f90 IterationData/IndexValue_Method@Constructor.f90 Vector/IntVector/IntVector_Method@Constructor.f90 Vector/IntVector/IntVector_Method@GetMethod.f90 Vector/IntVector/IntVector_Method@SetMethods.f90 IterationData/IterationData_Method@Constructor.f90 KeyValue/KeyValue_Method@Constructor.f90 KeyValue/KeyValue_Method@getMethod.f90 KeyValue/KeyValue_Method@SetMethod.f90 Vector/Tensor/Rank2Tensor/matrix_exponential.f90 QuadraturePoint/QuadraturePoint_Method@Constructor.f90 QuadraturePoint/QuadraturePoint_Method@GaussLegendre.f90 Random/Random_Method@Constructor.f90 Vector/Tensor/Rank2Tensor/Rank2Tensor_Method@Constructor.f90 Vector/Tensor/Rank2Tensor/Rank2Tensor_Method@Operation.f90 Matrix/RealMatrix/RealMatrix_Method@BLAS.f90 Matrix/RealMatrix/RealMatrix_Method@Constructor.f90 Matrix/RealMatrix/RealMatrix_Method@getValues.f90 Matrix/RealMatrix/RealMatrix_Method@LAPACK.f90 Matrix/RealMatrix/RealMatrix_Method@MatrixMultiplication.f90 Matrix/RealMatrix/RealMatrix_Method@setValues.f90 Vector/RealVector/RealVector_Method@BLAS1.f90 Vector/RealVector/RealVector_Method@Constructor.f90 Vector/RealVector/RealVector_Method@GetMethod.f90 Vector/RealVector/RealVector_Method@IO.f90 Vector/RealVector/RealVector_Method@SetMethods.f90 ReferenceElement/ReferenceElement_Method@Constructor.f90 ReferenceElement/ReferenceElement_Method@Geometry.f90 ReferenceElement/ReferenceElement_Method@HexahedronMethods.f90 ReferenceElement/ReferenceElement_Method@Lagrange.f90 ReferenceElement/ReferenceElement_Method@LineMethods.f90 ReferenceElement/ReferenceElement_Method@PrismMethods.f90 ReferenceElement/ReferenceElement_Method@PyramidMethods.f90 ReferenceElement/ReferenceElement_Method@QuadrangleMethods.f90 ReferenceElement/ReferenceElement_Method@TetrahedronMethods.f90 ReferenceElement/ReferenceElement_Method@TriangleMethods.f90 ReferenceElement/ReferenceElement_Method@VTK.f90 SparseMatrix/SparseMatrix_Method@BLASSM.f90 SparseMatrix/SparseMatrix_Method@Constructor.f90 SparseMatrix/SparseMatrix_Method@ILUT.f90 SparseMatrix/SparseMatrix_Method@IO.f90 SparseMatrix/SparseMatrix_Method@MatVec.f90 SparseMatrix/SparseMatrix_Method@setMethod.f90 SparseMatrix/SparseMatrix_Method@Unary.f90 Vector/Tensor/VoigtRank2Tensor/VoigtRank2Tensor_Method@Constructor.f90 Vector/Tensor/VoigtRank2Tensor/VoigtRank2Tensor_Method@GetMethod.f90 )

## COMPILER RELATED OPTIONS
message(STATUS "Is the Fortran compiler loaded? ${CMAKE_Fortran_COMPILER_LOADED}")
if(CMAKE_Fortran_COMPILER_LOADED)
  message(STATUS "Fortran compiler ID = ${CMAKE_Fortran_COMPILER_ID}")
  message(STATUS "Is the Fortran from GNU? ${CMAKE_COMPILER_IS_GNUFortran}")
  message(STATUS "The Fortran compiler version is: ${CMAKE_Fortran_COMPILER_VERSION}")
endif()

## Modules required by easifem-base are included here
## Lapack, Blas, LIS, HDF5, SZ, Z
## Try to find these libraries
# find_library(OPENBLAS_LIBRARY NAMES sfopenblas openblas gotoblas)
# target_link_libraries(${libeasifemBase.a} OPENBLAS_LIBRARY)
# set(BLAS_PATH "/usr/local/opt/openblas/" CACHE STRING "location of blas")
# set(LAPACK_PATH "/usr/local/opt/lapack/" CACHE PATH "Location of lapack")
# set(LIS_PATH "/usr/local/" CACHE PATH "Location of LIS library")
set(HDF5_PATH "/usr/local/opt/hdf5/" CACHE PATH "Location of HDF5 library")
# set(SZ_PATH "/usr/local/" CACHE PATH "Location of SZ library")
# set(Z_PATH "/usr/local/opt/zlib/" CACHE PATH "Location of Z library")

set(CMAKE_Fortran_MODULE_DIRECTORY "${EASIFEM_BASE_INCLUDE}")
list(APPEND EASIFEM_INCLUDE_DIR
  ${EASIFEM_BASE_INCLUDE} "${HDF5_PATH}/include")

add_library(easifemBaseObj OBJECT ${SOURCES})
set_target_properties(easifemBaseObj PROPERTIES POSITION_INDEPENDENT_CODE 1)
target_include_directories(easifemBaseObj PRIVATE ${EASIFEM_INCLUDE_DIR})

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release CACHE STRING "Build type" FORCE)
endif()

if( CMAKE_Fortran_COMPILER_ID MATCHES GNU)
	list(APPEND FORTRAN_FLAGS "-O2" "-cpp" "-fPIC")
	list(APPEND FORTRAN_FLAGS_DEBUG "-g" "-Wextra" "-Wall" "-std=f2008" "-pedantic" "-cpp" "-fPIC" "-fall-intrinsics")
	list( APPEND FORTRAN_FLAGS_RELEASE "-O2" "-cpp" "-fPIC")
endif()

target_compile_options(easifemBaseObj
  PRIVATE
    ${FORTRAN_FLAGS}
    "$<$<CONFIG:Debug>:${FORTRAN_FLAGS_DEBUG}>"
    "$<$<CONFIG:Release>:${FORTRAN_FLAGS_RELEASE}>"
)

add_library(libeasifemBase STATIC $<TARGET_OBJECTS:easifemBaseObj>)
# option(BUILD_SHARED_LIBS "Build shared library" ON)
# if(BUILD_SHARED_LIBS)
#   add_library(libeasifemBase_shared SHARED $<TARGET_OBJECTS:easifemBaseObj>)
# endif()

# find_library(LIBEASIFEMMODULES_LIBRARY NAMES libeasifemModules.a PATHS /Users/vikassharma/Dropbox/easifem-base/src/modules/ NO_DEFAULT_PATH)
# target_link_libraries(libeasifemBase.a ${LIBEASIFEMMODULES_LIBRARY})
# find_library(OPENBLAS_LIBRARY NAMES sfopenblas openblas gotoblas)
# target_link_libraries(${libeasifemBase.a} OPENBLAS_LIBRARY)


#cmake -DEASIFEM_PREFIX="~/" -D CMAKE_BUILD_TYPE=Release ../
