"type": {
		"prefix": "type",
		"description": "define a new dataTYPE",
		"body": [
			"!----------------------------------------------------------------------------",
			"!                                                                 ${name}",
			"!----------------------------------------------------------------------------",
			"TYPE :: ${name}",
			"\t",
			"END TYPE ${name}",
			"",
			"PUBLIC :: ${name}",
			"",
			"TYPE( ${name} ), PUBLIC, PARAMETER :: Type${name} = ",
			"\t",
			"",
			"TYPE :: ${name}Pointer_",
			"\tCLASS( ${name}, POINTER :: Ptr => NULL()",
			"END TYPE ${name}Pointer_",
			"",
			"PUBLIC :: ${name}Pointer_",
		],
	},
	"gnu-gpl3": {
		"prefix": "gpl3",
		"description": "GNU-GPL3 licence",
		"body": [
			"! This program is a part of EASIFEM library",
			"! Copyright (C) 2020-2021  Vikas Sharma, Ph.D",
			"!",
			"! This program is free software: you can redistribute it and/or modify",
			"! it under the terms of the GNU General Public License as published by",
			"! the Free Software Foundation, either version 3 of the License, or",
			"! (at your option) any later version.",
			"!",
			"! This program is distributed in the hope that it will be useful,",
			"! but WITHOUT ANY WARRANTY; without even the implied warranty of",
			"! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
			"! GNU General Public License for more details.",
			"!",
			"! You should have received a copy of the GNU General Public License",
			"! along with this program.  If not, see <https: //www.gnu.org/licenses/>",
			"!",
		],
	},
	"int": {
		"prefix": "int",
		"description": "integer",
		"body": "INTEGER( I4B )",
	},
	"real": {
		"prefix": "real",
		"body": "REAL( DFP ) ",
		"description": "real",
	},
	"logical": {
		"prefix": "logi",
		"description": "logical",
		"body": "LOGICAL( LGT ) ",
	},
	"modpuresub": {
		"prefix": "mps",
		"description": "module pure subroutine",
		"body": [
			"INTERFACE",
			"MODULE PURE SUBROUTINE ${NAME}( $0 )",
			"\t",
			"END SUBROUTINE ${NAME}",
			"END INTERFACE",
			"",
		],
	},
	"warn": {
		"prefix": "warn",
		"description": "warning ",
		"body": [
			"!@warning",
			"! \t$0",
			"!@endwarning",
		],
	},
	"note": {
		"prefix": "note",
		"description": "note ",
		"body": [
			"!@note",
			"! \t$0",
			"!@endnote",
		],
	},
	"todo": {
		"prefix": "todo",
		"description": "todo ",
		"body": [
			"!@todo",
			"! \t$0",
			"!@endtodo",
		],
	}
	"intro": {
		"prefix": "intro",
		"description": "introduction ",
		"body": [
			"!### Introduction",
			"! \t$0",
		],
	},
	"vikas": {
		"prefix": "vikas",
		"description": "vikas",
		"body": [
			"!> authors: Vikas Sharma, Ph. D.",
			"! date: \t$1",
			"! summary: \t$2",
		],
	},
	"usage": {
		"prefix": "use",
		"description": "use",
		"body": [
			"! ",
			"!### Usage",
			"! ",
			"!```fortran",
			"!\t$0",
			"!```",
		],
	},
	"modsub": {
		"prefix": "ms",
		"description": "module subroutine",
		"body": [
			"INTERFACE",
			"MODULE SUBROUTINE ${NAME}( ${Name2} )",
			"\t$0",
			"END SUBROUTINE ${NAME}",
			"END INTERFACE",
			"",
		],
	},
	"modpurefunc": {
		"prefix": "mpf",
		"description": "module pure function",
		"body": [
			"INTERFACE",
			"MODULE PURE FUNCTION ${NAME}( ${name2} ) RESULT( Ans )",
			"\t$0",
			"END FUNCTION ${NAME}",
			"END INTERFACE",
			"",
		],
	},
	"class": {
		"prefix": "cls",
		"description": "class",
		"body": "CLASS( $1 )",
	},
	"intentin": {
		"prefix": "in",
		"description": "intent in",
		"body": "INTENT( IN ) :: $1",
	},
	"intentout": {
		"prefix": "out",
		"description": "intent out",
		"body": "INTENT (OUT) :: $1",
	},
	"intentinout": {
		"prefix": "inout",
		"description": "intent in out",
		"body": "INTENT( INOUT) :: $1",
	},
	"generic": {
		"prefix": "generic",
		"description": "itnerface",
		"body": [
			"INTERFACE ${NAME}",
			"\tMODULE PROCEDURE $0",
			"END INTERFACE ${NAME}",
			"",
			"PUBLIC :: ${NAME}",
		],
	},
	"line": {
		"prefix": "line",
		"description": ".........",
		"body": [
			"!----------------------------------------------------------------------------",
			"!                                                                 $1",
			"!----------------------------------------------------------------------------",
		],
	},
	"procedure": {
		"prefix": "proc",
		"description": "procedure",
		"body": "PROCEDURE, PUBLIC, PASS( obj ) :: $1",
	},
	"moduleprocedure":{
		"prefix": "mp",
		"description": "module procedure",
		"body": [
			"MODULE PROCEDURE ${NAME}",
			"\t$0",
			"END PROCEDURE ${NAME}",
		],
	},
	"modulefunction":{
		"prefix": "mf",
		"description": "module function",
		"body": [
			"INTERFACE",
			"MODULE FUNCTION $1( $2 ) RESULT( Ans )",
			"\t$0",
			"END FUNCTION $1",
			"END INTERFACE",
		],
	},
	"char":{
		"prefix": "char",
		"description": "charcter(len=*)",
		"body": "CHARACTER( LEN = * )",
	},
	"display": {
		"prefix": "disp",
		"description": "display",
		"body": [
			"INTERFACE",
			"MODULE SUBROUTINE ${NAME1}( obj, Msg, UnitNo )",
			"\tCLASS( ${NAME2} ), INTENT( IN ) :: obj",
			"\tCHARACTER( LEN = * ), INTENT( IN ) :: Msg",
			"\tINTEGER( I4B ), OPTIONAL, INTENT( IN ) :: UnitNo",
			"END SUBROUTINE ${NAME1}",
			"END INTERFACE",
			"",
		],
	},
}
