# easifemBaseConfig.cmake.in
#-----------------------------
#
# easifemBase cmake module
# This module sets the following variables in your project:
#
# ::
#
# easifemBase_FOUND - true if easifemBase found on the system
# easifemBase_VERSION - easifem version in format Major.Minor.Release
#
#
# Exported targets:
#
# ::
#
#
#
# easifemBase::easifemBase-shared
# easifemBase::easifem-Static
#
#
# Suggested usage:
#
# ::
#
# find_package(easifemBase)
# find_package(easifemBase 1.0.0 CONFIG REQUIRED)
#
# The following variables can be set to guide the search for this package:
#
#

@PACKAGE_INIT@

LIST(
  APPEND
  ExternalLibs
  Sparsekit
)

IF( @USE_LAPACK95@ )
  LIST(APPEND
    ExternalLibs
    LAPACK95
  )
ENDIF()

IF( @USE_ARPACK@ )
  LIST(APPEND
    ExternalLibs
    arpackng
  )
ENDIF()

FOREACH(LIB ${ExternalLibs})
  FIND_PACKAGE(${LIB} REQUIRED)
ENDFOREACH()

IF( @USE_OpenMP@ )
	IF(APPLE)
		IF(CMAKE_C_COMPILER_ID MATCHES "Clang" OR CMAKE_C_COMPILER_ID MATCHES "AppleClang")
			SET(OpenMP_C "${CMAKE_C_COMPILER}" CACHE STRING "" FORCE)
			SET(OpenMP_C_FLAGS 
					"-fopenmp=libomp -Wno-unused-command-line-argument" 
					CACHE STRING 
					"" 
					FORCE
			)
			SET(OpenMP_C_LIB_NAMES "libomp" "libgomp" "libiomp5" CACHE STRING "" FORCE)
			SET(OpenMP_libomp_LIBRARY ${OpenMP_C_LIB_NAMES} CACHE STRING "" FORCE)
			SET(OpenMP_libgomp_LIBRARY ${OpenMP_C_LIB_NAMES} CACHE STRING "" FORCE)
			SET(OpenMP_libiomp5_LIBRARY ${OpenMP_C_LIB_NAMES} CACHE STRING "" FORCE)

			SET(OpenMP_CXX "${CMAKE_CXX_COMPILER}" CACHE STRING "" FORCE)
			SET(
				OpenMP_CXX_FLAGS 
				"-fopenmp=libomp -Wno-unused-command-line-argument" 
				CACHE STRING 
				"" 
				FORCE
			)

			SET(OpenMP_CXX_LIB_NAMES "libomp" "libgomp" "libiomp5" CACHE STRING "" FORCE)
		ENDIF()
	ENDIF()

	FIND_PACKAGE(OpenMP REQUIRED)
ENDIF()

set_and_check(
  "@PROJECT_NAME@_INCLUDE_DIR" "@PACKAGE_INSTALL_INCLUDEDIR@")

include(
  "${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake")

check_required_components(
    "@PROJECT_NAME@"
  )
